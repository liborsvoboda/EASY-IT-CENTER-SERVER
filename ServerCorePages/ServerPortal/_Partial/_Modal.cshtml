@* @addTagHelper *, WebOptimizer.Core *@
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Westwind.AspNetCore
@addTagHelper *, Westwind.AspNetCore.Markdown

@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.RazorPages

@using Westwind.AspNetCore.Markdown

@using System.IO
@using System.Linq
@using System.Collections
@using System.Collections.Generic
@using System.Text.RegularExpressions
@using System.Security.Claims
@using System.Threading.Tasks

@using EasyITCenter
@using EasyITCenter.DBModel
@using EasyITCenter.Managers
@using EasyITCenter.WebClasses
@using EasyITCenter.WebModel
@using EasyITCenter.WebDBModel
@using EasyITCenter.WebControllers
@using EasyITCenter.ServerCoreStructure
@using EasyITCenter.ServerCorePages

@namespace ServerCorePages
@model ServerCorePages.ServerPortalModel

@{
    string path = this.Context.Request.Path.ToString().ToLower();
    string? role = this.Context.User.Claims.Where(a => a.Type == ClaimTypes.Role).FirstOrDefault()?.Value;
    string? name = this.Context.User.Claims.Where(a => a.Type == ClaimTypes.NameIdentifier).FirstOrDefault()?.Value;
}



    <div id="charmPanel" data-role="charms" style="width:350px !important;height:calc(100% - 45px) !important;" data-position="right" data-opacity=".5">
        <textarea id="NewMessage" data-role="textarea" data-auto-size="true" data-max-height="150" class="primary" placeholder="Zanechte mi Zprávu...."></textarea>
        <button id="SendMessageBtn" class="button success mb-4" onclick="SendMessage()">Save Message</button>
        <div id="MessageBox" class="d-block m-0 p-0" style="overflow-y: scroll;max-height: 500px;"></div>
    </div>


    <!-- News Panel -->
    <div id="NewsInfoBox" class="info-box" data-role="infobox" data-type="default" data-width="800" data-height="600" style="visibility:hidden;">
        <span class="button square closer"></span>
        <div class="info-box-content" style="overflow-y:auto;">
            <div class="d-flex row ">
                <div id="NewsListBox" class="d-block m-0 p-0" style="overflow-y: scroll;height:550px;max-height: 550px;"></div>
            </div>
        </div>
    </div>

    <!-- Generator Panel -->
    <div id="TemplateGeneratorBox" class="info-box" data-role="infobox" data-type="default" data-width="800" data-height="600" style="visibility:hidden;">
        <span class="button square closer"></span>
        <div class="info-box-content" style="overflow-y:auto;">
            <div class="d-flex row ">
                <div id="NewsListBox" class="d-block m-0 p-0" style="overflow-y: scroll;height:550px;max-height: 550px;"></div>
            </div>
        </div>
    </div>

<script>

    let apiMessages = [
        {apiSaveSuccess : "Saving Data was Saved Sucessfully"},
        {apiSaveFail : "Saving Data was Failed"},
        {apiLoadSuccess : "Saving Data was Saved Sucessfully"},
        {apiLoadFail : "Saving Data was Failed"}
    ];

    let defaultSetting = [
        {notifyWidth : 300 },
        {notifyDuration : 1000 },
        {notifyAnimation : "easeOutBounce" }
    ];

    

    Metro.storage.setItem('BackendServerAddress', window.location.origin);
    Metro.storage.setItem('DetectedLanguage', (navigator.language || navigator.userLanguage).substring(0, 2));
    if (Metro.storage.getItem('UserAutomaticTranslate', null) == null) { Metro.storage.setItem('UserAutomaticTranslate', true); }
    if (Metro.storage.getItem('WebScheme', null) == null) {
        Metro.storage.setItem('WebScheme', "sky-net.css");
        ChangeSchemeTo(Metro.storage.getItem('WebScheme', null));
    } else { ChangeSchemeTo(Metro.storage.getItem('WebScheme', null)); }



    /*Start Set Global Constants*/
    Metro.storage.setItem('ApiOriginSuffix', Metro.storage.getItem('BackendServerAddress', null) + "/WebApi");
    Metro.storage.setItem('DefaultPath', Metro.storage.getItem('DefaultPath', null) == null ? window.location.href : Metro.storage.getItem('DefaultPath', null));


    //Start Set User Default Setting
    if (Metro.storage.getItem('UserAutomaticTranslate', null) == null) { Metro.storage.setItem('UserAutomaticTranslate', false); }


    var notify = Metro.notify; notify.setup({ width: defaultSetting[0].notifyWidth, duration: defaultSetting[0].notifyDuration, animation: defaultSetting[0].notifyAnimation });


    function RunServerPostApi(authRequired, apiPath , jsonData) {
        showPageLoading();
        var def = $.ajax({
            global: false, type: "POST", url: Metro.storage.getItem('ApiOriginSuffix', null) + apiUrl, dataType: 'json',
            headers: authRequired ? {'Content-type': 'application/json', 'Authorization': 'Bearer ' + Metro.storage.getItem('ApiToken', null) } : {'Content-type': 'application/json'} ,
            data: JSON.stringify(jsonData)
        });

        def.fail(function (err) {
            notify.create(apiMessages[0].apiSaveFail, "Alert", { cls: "alert" }); notify.reset();
            hidePageLoading();
            return false;
        });

        def.done(function (data) {
            notify.create(apiMessages[0].apiSaveSuccess, "Info", { cls: "success" }); notify.reset();
            hidePageLoading();
            return true;
        });
    }

    //Get Messages
    function RunServerGetApi(authRequired, apiPath, storageName) {
        showPageLoading();
        $.ajax({
            url: Metro.storage.getItem('ApiOriginSuffix', null) + apiPath, dataType: 'json',
            type: "GET",
            headers: authRequired ? {'Content-type': 'application/json', 'Authorization': 'Bearer ' + Metro.storage.getItem('ApiToken', null) } : {'Content-type': 'application/json'},
            success: function (apiData) {
                Metro.storage.setItem(storageName, JSON.parse(JSON.stringify(apiData)));
                notify.create(apiMessages[0].apiLoadSuccess, "Info", { cls: "success" }); notify.reset();
                hidePageLoading();
                return true;
            },
            error: function (error) {
                Metro.storage.setItem(storageName, null);
                notify.create(apiMessages[0].apiLoadFail, "Alert", { cls: "alert" }); notify.reset();
                hidePageLoading();
            }
        });
    }

    function UserChangeTranslateSetting() {
        Metro.storage.setItem('UserAutomaticTranslate', $("#UserAutomaticTranslate").val('checked')[0].checked);
        if ($("#UserAutomaticTranslate").val('checked')[0].checked) { GoogleTranslateElementInit(); } else { CancelTranslation(); }
    }

    function ChangeSchemeTo(n) {
        $("#AppPanel").css({ backgroundColor: n.split("?")[1] });
        $("#portal-color-scheme").attr("href", window.location.origin + "/server-integrated/razor-pages/serverportal/metro/css/schemes/" + n.split("?")[0]);
        $("#scheme-name").html(n.split("?")[0]);
        Metro.storage.setItem('WebScheme', n.split("?")[0]);
    }

    function ShowToolPanel(close) {
        $("#UserAutomaticTranslate").val('checked')[0].checked = Metro.storage.getItem('UserAutomaticTranslate', null);
        if (close) { Metro.bottomsheet.close($('#toolPanel')); } else {
            if (Metro.bottomsheet.isOpen($('#toolPanel'))) { Metro.bottomsheet.close($('#toolPanel')); }
            else { Metro.bottomsheet.open($('#toolPanel')); }
        }
    }


    function GetGoogleOptionLanguageIndex(optionValue) {
        let options = Array.from(document.getElementsByClassName("goog-te-combo")[0].options);
        return options.findIndex((opt) => opt.value == optionValue);
    }

    function GoogleTranslateElementInit() {
        $(document).ready(function () {
            new google.translate.TranslateElement({
                pageLanguage: 'en', //includedLanguages: 'en,cs',
                layout: google.translate.TranslateElement.InlineLayout.HORIZONTAL,
                autoDisplay: false
            }, 'google_translate_element');

            let autoTranslateSetting = Metro.storage.getItem('UserAutomaticTranslate', null) == null || Metro.storage.getItem('UserAutomaticTranslate', null) == false ? false : true;
            if (autoTranslateSetting && document.querySelector('#google_translate_element select') != null) {
                setTimeout(function () {
                    let selectElement = document.querySelector('#google_translate_element select');
                    selectElement.value = Metro.storage.getItem('DetectedLanguage', null);
                    selectElement.dispatchEvent(new Event('change'));
                }, 1000);
            }
        });
    }

    function CancelTranslation() {
        Metro.storage.setItem('UserAutomaticTranslate', false);
        $("#UserAutomaticTranslate")[0].checked = false;

        setTimeout(function () {
            let selectElement = document.querySelector('#google_translate_element select');
            if (GetGoogleOptionLanguageIndex("") == 0) { selectElement.selectedIndex = 0; ShowToolPanel();
            } else { selectElement.selectedIndex = GetGoogleOptionLanguageIndex("en"); }
            selectElement.dispatchEvent(new Event('change'));
            if (selectElement.value != '') {
                setTimeout(function () {
                    if (GetGoogleOptionLanguageIndex("") == 0) { selectElement.selectedIndex = 0; ShowToolPanel();
                    } else { selectElement.selectedIndex = GetGoogleOptionLanguageIndex("en"); }
                    selectElement.dispatchEvent(new Event('change'));
                    if (selectElement.value != '') {
                        setTimeout(function () {
                            if (GetGoogleOptionLanguageIndex("") == 0) { selectElement.selectedIndex = 0; ShowToolPanel();
                            } else { selectElement.selectedIndex = GetGoogleOptionLanguageIndex("en"); }
                            selectElement.dispatchEvent(new Event('change'));
                        }, 2000);
                    }
                }, 2000);
            }
        }, 1000);
    }


    function CreateToolPanel() {
        let html = '<div id="toolPanel" data-role="bottom-sheet" class="bottom-sheet pos-fixed list-list grid-style opened" style="top: 0px; left: 90%; z-index:10000;min-width: 430px;">';
        html +='<div class="c-pointer mif-cancel mif-1x icon pos-absolute fg-red" style="top:5px;right:5px;" onclick=ShowToolPanel(); ></div>';
        html += '<div class="w-100 text-left"> <audio id="radio" class="light bg-transparent" data-role="audio-player" data-src="/server-integrated/razor-pages/serverportal/media/hotel_california.mp3" data-volume=".5"></audio> </div>';
        html += '<div class="w-100 text-left" style="z-index: 1000000;"><div id="google_translate_element"></div></div>';
        html += '<div class="w-100 d-inline-flex"><div class="w-75 text-left">';
        html += '<input id="UserAutomaticTranslate" type="checkbox" data-role="checkbox" data-cls-caption="fg-cyan text-bold" data-caption="Auto Translate" onchange=UserChangeTranslateSetting(); checked >';
        html += '</div><div class="w-25 mt-1 text-right" style="max-width:25% !important;"><button class="button secondary mini" style="max-width:100% !important;" onclick=CancelTranslation(); >Cancel Translate</button></div>';
        html += '</div><div class="d-flex w-100" title="Theme">';
        let themes = [
            ["#585b5d", "darcula.css?white"], ["#AF0015", "red-alert.css?white"], ["#690012", "red-dark.css?white"], ["#0CA9F2", "sky-net.css?white"],
            ["#585b5d", "darcula.css?#585b5d"], ["#AF0015", "red-alert.css?#AF0015"], ["#690012", "red-dark.css?#690012"], ["#0CA9F2", "sky-net.css?#0CA9F2"]
        ];
        themes.forEach((theme, index) => {
            html += '<button class="button shadowed w-50px ' + (index < 4 ? "opc-05" : "") + ' mt-1" style="background-color: ' + theme[0] + ';" onclick="ChangeSchemeTo(\'' + theme[1] + '\')" ></button>';
            if (index == 3) { html += '</div><div class="d-flex w-100" title="BackGround">'; }
        });

        let injectToolPanel = document.createElement("div");
        injectToolPanel.innerHTML = html;
        document.body.append(injectToolPanel);
    };


    //TODO Create header menu Info with link About News
    //Control Header Menu WebPage Mottos Cycling
    function ShowHotInfoLink(){
		setTimeout(function () { 
		try {
            let data = Metro.storage.getItem('HotInfoLink', null); let setNext = false; let setted = false; var BreakException = {};
            try {
                data.forEach((motto, index) => {
                    if (Metro.storage.getItem('LastMottoId', null) == null || setNext) { Metro.storage.setItem('LastMottoId', motto.id); $("#HotInfoLink").html(motto.systemName); setted = true; throw BreakException; }
                    if (Metro.storage.getItem('LastMottoId', motto.id) == motto.id) { setNext = true; }
                    if (data.length - 1 == index && !setted) { Metro.storage.setItem('LastMottoId', data[0].id); $("#HotInfoLink").html(data[0].systemName); }
                });
            } catch (e) { if (e !== BreakException) throw e; }
            setTimeout(function () { ShowHotInfoLink(); }, 10000);
		} catch { } }, 10000);
	    
    }

    function ScrollToTop() { window.scrollTo(0, 0); }
    function enableScroll() { window.onscroll = function () { }; }
    function disableScroll() {
        scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,
        window.onscroll = function () { window.scrollTo(scrollLeft, scrollTop); };
    }


    //Blocked IP Info Panel
    function ShowBlockedMessage() {
        var html_content =
            "<h3>Blokovaná IP Adresa</h3>" +
            "<p>Vaše adrese je blokována, protože byla zjištěna podezřelá činnost...</p>" +
            "<p>Pro Odblokování nás kontaktujte Telefonicky.</p>";
        Metro.infobox.create(html_content, "alert");
    }

    //Unauthorized Access Info Panel
    function ShowUnAuthMessage() {
        Logout();
        var html_content =
            "<h3>Neautorizovaný Přístup</h3>" +
            "<p>Pokoušíte se provést autorizovanou operaci neoprávněně,</p>" +
            "<p>nebo platnost vašeho tokenu vypršela.</p>";
        Metro.infobox.create(html_content, "alert");
    }


    function PrintElement(elementId){
	    try{$("#"+elementId).printElement({pageTitle:elementId.split("_")[1]+".html",printMode:"popup"});}catch(t){}
    }

    function DownloadHtmlElement(elementId){
	    try{var t=document.body.appendChild(document.createElement("a"));t.download=elementId+".html";t.href="data:text/html;charset=utf-8,"+encodeURIComponent(document.getElementById(elementId).innerHTML);t.click();}catch(i){}
    }

    async function CopyElement(elementId){
	    try{let t=document.getElementById(elementId).innerHTML;await navigator.clipboard.writeText(t);}catch(t){}
    }

    function ImageFromElement(elementId){
	    try{$("document").ready(function(){html2canvas($("#"+elementId),{onrendered:function(t){$("#previewImage").append(t);
	    var r=t.toDataURL("image/png"),u=r.replace(/^data:image\/png/,"data:application/octet-stream"),i=document.body.appendChild(document.createElement("a"));i.download=elementId+".png";i.href=u;i.click()}})})
	    }catch(t){}
    }


    $(document).ready(function () {
        CreateToolPanel();
        setTimeout(() => { GoogleTranslateElementInit(); }, 3000);
    });
</script>